[tool.poetry]
name = "identify-completed-form-app"
version = "0.1.0"
description = ""
authors = ["Alexandr Rutkowski <kitanoyoru@protonmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
click = "^8.1.7"
httpx = "^0.25.1"
orjson = "^3.9.10"
uvicorn = "^0.24.0.post1"
gunicorn = "^21.2.0"
pydantic = "^2.5.1"
pymongo = "^4.6.0"
motor = "^3.3.2"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
black = "^23.9.1"
pytest = "^7.4.2"
ruff = "^0.0.291"
pyright = "^1.1.329"
testcontainers = "^3.7.1"
faker = "^19.6.2"
selenium = "4.9.1"
coverage = { version = "7.3.1", extras = ["toml"]}
isort = { version = "^5.12.0", extras = ["pyproject"]}

[tool.ruff]
target-version = "py310"
select = ["F"]
ignore = ["F403"]

[tool.pyright]
typeCheckingMode = "strict"
# reportMissingTypeArgument = "none"
reportUnknownVariableType = "none"
reportUnknownArgumentType = "none"
reportUnusedFunction = "none"
# reportPrivateUsage = "none"
reportUnknownMemberType = "none"
reportMissingTypeStubs = false
useLibraryCodeForTypes = true

[tool.black]
line-length = 88
target_version = ['py38']
exclude = '''
(
  /(
    \.git
    | \.mypy_cache
    | \.pytest_cache
    | htmlcov
    | venv
    | .venv
  )/
)
'''

[tool.isort]
line_length = 88
indent = '    '
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0

[tool.coverage]
    [tool.coverage.run]

    source = ["app"]
    branch = true
    omit = ['']

    [tool.coverage.report]
    exclude_lines = [
        "# noqa",
        "raise NotImplementedError"
    ]
